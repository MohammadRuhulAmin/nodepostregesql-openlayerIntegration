<!doctype html>
<html lang="en">
  <head>
    <!-- bootstrap start  -->
   
    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.1/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <!-- bootstrap end  -->

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css" type="text/css">
    <link rel="stylesheet" href="css/style.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.6.2/proj4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>
    <script src="https://unpkg.com/@turf/turf@5.1.6/turf.min.js"></script>
  </head>
  <body>
 
   
    <div id="map" class="map"></div>

     
  
    <!-- display map -->
    <script>

        var style = new ol.style.Style({
        fill: new ol.style.Fill({
          color: 'rgba(255, 255, 255, 0.6)'
        }),
        stroke: new ol.style.Stroke({
          color: '#319FD3',
          width: 1
        }),
        text: new ol.style.Text({
          font: '12px Calibri,sans-serif',
          fill: new ol.style.Fill({
            color: '#000'
          }),
          stroke: new ol.style.Stroke({
            color: '#fff',
            width: 3
          })
        })
      });

      var vectorLayer = new ol.layer.Vector({
        source: new ol.source.Vector({
          //url: 'https://openlayers.org/en/v4.6.5/examples/data/geojson/countries.geojson',
          url:'http://localhost:3000/mapGeojson-api',
          format: new ol.format.GeoJSON()
        }),
        style: function(feature) {
          style.getText().setText(feature.get('plot_no_en'));
          return style;
        }
      });

      var map = new ol.Map({
        layers: [vectorLayer],
        target: 'map',
        view: new ol.View({
          center: [0.06363572987039787,-0.031641902511065065],
          zoom: 12
        })
      });

    

     
     
    </script>
  </body>
</html>





<!-- 
<script>
    const source = new ol.source.Vector({wrapX: false});
    const vector_string = new ol.layer.Vector({
          source:source,
          style: new ol.style.Style({
            fill: new ol.style.Fill({
              color: 'rgba(255, 255, 255, 0.9)'
            }),
            stroke: new ol.style.Stroke({
              color: '#FFA500',
              width: 4
            })
          })
      });
    var xplotGeo =  document.getElementById("mouzaMap").value;
  //   var xplotGeo = JSON.parse(plotGeo)
    console.log(xplotGeo)
    //plotGeo = {"type":"MultiPolygon","coordinates":[[[[4046.137459764,-2878.714050774],[4014.873859615,-2873.018287875],[3971.718316001,-2867.722415084],[3939.301623603,-2865.072573053],[3914.316827077,-2859.209277177],[3846.534808558,-2846.816429934],[3802.442194746,-2836.671482232],[3822.019875457,-2796.044405241],[3848.384732795,-2732.099802185],[3874.151042427,-2676.253161509],[3895.026300793,-2611.971703364],[3918.28929954,-2553.516381049],[3947.169831119,-2486.771113005],[4004.175654468,-2503.78604411],[4064.735942756,-2522.756743693],[4102.229970925,-2537.668629483],[4101.264122211,-2547.624798289],[4102.267962026,-2581.728831568],[4103.472529562,-2621.230148818],[4106.034159702,-2646.297371179],[4107.286034321,-2658.547781159],[4111.296041379,-2695.657545389],[4113.600949346,-2721.897436354],[4115.104193936,-2760.055480338],[4119.452871125,-2838.399779034],[4119.038017056,-2868.697578841],[4061.185116927,-2877.200944262],[4046.137459764,-2878.714050774]]]]};
    const map = new ol.Map({
          target: 'map',
          layers: [
              vector_string,
              new ol.layer.Graticule({
              visible: true,
              strokeStyle: new ol.style.Stroke({
                color: 'rgba(255,120,0,0.9)',
                width: 1,
                lineDash: [10,10],
              }),
              showLabels: true ,
              wrapX: false ,
            }),
              
              
          ],
          
          
         
          view: new ol.View()
      });
    var geometry = new ol.format.GeoJSON().readGeometry(xplotGeo);
    map.addLayer(
      new ol.layer.Vector({
        source: new ol.source.Vector({
          features: [new ol.Feature(geometry)]
        }),
        style: new ol.style.Style({
            stroke: new ol.style.Stroke({
              color: 'black',
              width: 1,
              opacity: 0.5,
            })
          })
       
      })
    );
    map.getView().fit(geometry);
  </script> -->
